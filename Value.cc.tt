<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ output extension=".inl" #>
// This file is auto-generated; do not edit.
#if PART == __BOOL_DEFINED
<#
string[] lines = File.ReadAllLines("Value.txt");
string[][] parts = lines.Select((s) => s.Split('|').Select((t) => t.Trim()).ToArray()).ToArray();
#>
bool AsBoolean(Value const& value) {
	switch (value.index()) {
<#
foreach ((int index, string typeName, string code) in parts.Select((a, i) => (i, a[0], a[1].Replace("$", $"std::get<{i}>(value)")))) {
#>	case <#= index #>: // <#= typeName[0] == '@' ? "std::shared_ptr<" + typeName.Substring(1) + ">" : typeName #>
		<#= code #>
<#
}
#>	default:
		throw std::logic_error("unexpected value index");
	}
}
#elif PART == _CRT_INTERNAL_PRINTF_STANDARD_ROUNDING
void PrintValue(Value const& value) {
	switch (value.index()) {
<#
foreach ((int index, string typeName, string code) in parts.Select((a, i) => (i, a[0], a[2].Replace("@", "*PrintFunction::outputStream").Replace("$", $"std::get<{i}>(value)")))) {
#>	case <#= index #>: // <#= typeName[0] == '@' ? "std::shared_ptr<" + typeName.Substring(1) + ">" : typeName #>
		<#= code #>
		break;
<#
}
#>	default:
		throw std::logic_error("unexpected value index");
	}
}
#else
# error no part
#endif
